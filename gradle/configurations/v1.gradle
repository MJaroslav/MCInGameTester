repositories { maven { url 'https://jitpack.io' } }

task testJar(type: Jar, description: "Make jar from test source set for test runtime",
        group: "MCInGameTester") {
    from sourceSets.test.output
    // Tests not needed in build/libs
    destinationDir new File(project.buildDir, "tmp/testJar")
}

task copyMappingsToProjectDir(type: Copy, dependsOn: 'genSrgs',
        description: "Just copies mappings to build dir, it needed if you use CodeChickenLib (from GregTech maven)",
        group: "MCInGameTester") {
    from plugins.getPlugin('forge').delayedFile('{MCP_DATA_DIR}')
    include '**/*.srg'
    include "**/*.csv"
    into new File(project.buildDir, "unpacked/conf")
}

// Just wrapper for runClient task with using test source set
task testClient(type: JavaExec, dependsOn: ["makeStart", "copyMappingsToProjectDir", "jar", "testJar"],
        group: "MCInGameTester", description: "Runs the Minecraft Client, runs game tests then stop it") {
    doFirst {
        File f = new File(project.buildDir, "test/testClient")
        if (!f.exists()) f.mkdirs() else { f.deleteDir(); f.mkdirs() } // Always clear client
    }
    // Outputs removed for avoiding mod duplications
    // Uses jars for manifests
    classpath project.configurations.testRuntimeClasspath + files(tasks.jar) + files(tasks.testJar) - sourceSets.main.output - sourceSets.test.output
    //classpath tasks.runClient.classpath + files(tasks.testJar)// + project.configurations.testRuntimeOnly
    main tasks.runClient.main
    args tasks.runClient.args
    jvmArgs tasks.runClient.jvmArgs
    // No conflicts with run/debug tasks
    workingDir new File(project.buildDir, "test/testClient")
    standardOutput tasks.runClient.standardOutput
    errorOutput tasks.runClient.errorOutput
}

// Just wrapper for runServer task with using test source set
task testServer(type: JavaExec, dependsOn: ["makeStart", "copyMappingsToProjectDir", "jar", "testJar"],
        group: "MCInGameTester", description: "Runs the Minecraft Server, runs game tests then stop it") {
    doFirst {
        File f = new File(project.buildDir, "test/testServer")
        if (!f.exists()) f.mkdirs() else { f.deleteDir(); f.mkdirs() } // Always clear server
        new File(project.buildDir, "test/testServer/eula.txt").setText("eula=true") // auto eula
    }
    // Outputs removed for avoiding mod duplications
    // Uses jars for manifests
    classpath project.configurations.testRuntimeClasspath + files(tasks.jar) + files(tasks.testJar) - sourceSets.main.output - sourceSets.test.output
    main tasks.runServer.main
    args tasks.runServer.args
    jvmArgs tasks.runServer.jvmArgs
    // No conflicts with run/debug tasks
    workingDir new File(project.buildDir, "test/testServer")
    standardOutput tasks.runServer.standardOutput
    errorOutput tasks.runServer.errorOutput
}

dependencies {
    testImplementation "com.github.MJaroslav:MCInGameTester:master-SNAPSHOT:dev"
}
